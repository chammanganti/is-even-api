name: ECS Deployment

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: is-even-api
  ECS_SERVICE: is-even-api
  ECS_CLUSTER: test-cluster
  ECS_TASK_DEFINITION: .aws/task_definition.json
  CONTAINER_NAME: is-even-api
  ROCKET_ADDRESS: 0.0.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_QA }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Build and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill task definition vars
        run: envsubst < .aws/task_definition.json > .aws/task_definition.out.json  

      - name: Render task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/task_definition.out.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - run: mv ${{ steps.task-def.outputs.task-definition }} .aws/task_definition.out.json

      - name: Upload task definition (qa)
        uses: actions/upload-artifact@v3
        with:
          name: task_definition.qa.json
          path: .aws/task_definition.out.json
          retention-days: 7

      - name: Download task definition
        uses: actions/download-artifact@v3
        with:
          name: task_definition.qa.json

      - run: ls -la && pwd

      # - name: Deploy
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: ${{ env.ECS_SERVICE }}
      #     cluster: ${{ env.ECS_CLUSTER }}
      #     wait-for-service-stability: true
